c
n
c
n
folders.select{|a| a.parent_location==whereami(act_location,folders) && a.name==command[1]}
act_path_fd
n
exit
act_path_fd
n
c
folders=folders-folders.select{|x| x.name=='a2'}
folders
folders=folders-folders.select{|x| x.name=='a2'}
folders.count
folders
a=a-['b']
a=a-'b'
a=['a','b','c']
a=a-2
a=[1,2,3,4,5]
nuevas
nuevas = folders - busq
busq=folders.select{|x| x.name=='a2'}
folders
exit
folders
folders -= folders-busq
folders.count
folders
(folders-busq).count
folders-busq.count
folders-busq
folders.count
busq=folders.select{|x| x.name=='a2'}
folders.select{|x| x.name=='a2'}
folders
folders.count
folres
exit
files
folders
folders.reject!{|a| a.name==command[1] && a.parent_location==whereami(act_location,folders)}
n
files
files.reject!{|a| a.name==command[1] && a.parent_location==whereami(act_location,folders)}
act_path_fl
act_path_fd
n
c
n
act_path_fl
act_path_fd
n
c
files.select{|a| a.parent_location==whereami(act_location,folders)}
n
c
act_path_fl
act_path_fd
n
c
n
c
exit
a.reject!{|x| x==3}
a=[1,2,3,4,5]
a.delete_if{|x| x==3}
a
a.delete_if{|x| x==3}
a=[1,2,3,4,5]
a
a=a.reject{|x| x==2} rescue false
a
a=a.reject{|x| x==2} rescue false
a=a.reject({|x| x==2}) rescue false
a=a.reject(2)
a
a.push(3)
a=[1,2]
a
a=a.reject(2) rescue true
a
a.reject(2) rescue true
a.push(3)
a.psuh(3)
a=[1,2]
c
n
c
exit
n
act_path_fd.any?
act_path_fl.any?
act_path_fl
act_path_fd
n
c
n
 act_path_fl.empty?
act_path_fd.empty?
n
c
n
act_path_fl
n
c
act_location
act_path_fl
n
act_path_fd
n
c
n
folders.select{|a| a.parent_location==whereami(act_location,folders)}
n
c
 a.parent_location==whereami(act_location,folders)}.empty?
n
command
exit
input.split(/"/)[1]
texto = input.split(/"/)
input
texto = input.split(/ "/)
command=input.split(/\s/)
input.split(/\s/)
input.split(/ "/)
input.split(/"/)
input.split(\/"/)
input.split(\")
input.split("")
input.split(")
input
command.count
command
c
ls
c
files.select{|a| a.name==command[1] && a.parent_location==whereami(act_location,folders)}
files.select{|a| a.name==command[1] && a.parent_location==whereami(act_location,folders)
nfiles.select{|a| a.name==command[1] && a.parent_location==whereami(act_location,folders)}
c
cd ..
pp files
c
exit
whereami(act_location,folders)
files.select{|a| a.name==command[1] && whereami(act_location,folders)}
c
pp files
files
c
command[1].to_s.nil?
command[1].to_s
command[1]
command[0]
command
c
n
c
folders.select{|a| a.name==command[1].to_s && a.parent_location==whereami(act_location,folders)}.empty?
c
!folders.select{|a| a.name==command[1].to_s && a.parent_location==whereami(act_location,folders)}.empty?
command[1].to_s.nil?
c
folders.select{|a| a.name==command[1].to_s && a.parent_location==whereami(act_location,folders)}.empty?
folders.select{|a| a.name==command[1].to_s && a.parent_location==whereami(act_location,folders)}
a.parent_location==whereami(act_location,folders)
whereami(act_location,folders)
command[1]
command[1].to_s.nil?
c
command
exit
n
nn
c
files
files.select{|a| a.name==command[1] && whereami(act_location,folders)}.empty?
files = files.reject{|a| a.name==command[1] && whereami(act_location,folders)} unless files.select{|a| a.name==command[1] && whereami(act_location,folders)}.empty?
files.select{|a| a.name==command[1] && whereami(act_location,folders)}.empty?
files.select{|a| a.name==command[1] && whereami(act_location,folders)}
exit
files.select{|a| a.name==command[1] && whereami(act_location,folders)}
files.select{|a| a.name==command[1] && a.parent_location==act_location.name}
files.reject{|a| a.name==command[1] && a.parent_location==act_location.name} unless files.select{|a| a.name==command[1] && a.parent_location==act_location.name}
c
exit
act_location==root_path
root_path
act_location
c
folders.select{|x| x.parent_location==location}
n
parent_location.split('/').count<=2
n
s
n
c
folders.select{|x| x.parent_location+x.name==parent_location}
t
n
parent_location
parent_location.split('/').count<=2parent_location
parent_location.split('/').count<=2
n
s
n
c
folders.select{|x| x.parent_location+x.name==parent_location}
folders.select{|x| x.parent_location+x.name==location}
folders.select{|x| x.parent_location+x.name==location}.first
n
parent_location.split('/').count<=2
n
s
n
c
n
s
n
c
exit
parent_location.index(/((\/(([A-z0-9]*))){1}\z)/)
parent_location
folders.select{|x| x.parent_location==location}.first
n
s
n
c
folders.select{|x| x.parent_location==location}
nfolders.select{|x| x.parent_location+'/'+x.name==location}
whereami(act_location,folders)
location
parent_location
folders.select{|x| x.parent_location+'/'+x.name==location}
folders
n
parent_location
folders.select{|x| x.parent_location+'/'+x.name==location}
n
parent_location
n
s
n
c
location
folders.select{|x| x.parent_location+x.name==location}
t
n
parent_location[0,parent_location.index(/((\/(([A-z0-9]*))){1}\z)/)]
n
s
n
c
