c
track.join('/')
n
c
n
track
n
track
n
track
n
track
n
track
n
track
n
t
n
c
until t==nil do track.unshift(t.name) 
until t==nil do
t=act_location
t=act_location.name
act_location
track = []
t = folders.select{|x| x.name==t.parent_location}.first
track.unshift(t.name)
t = folders.select{|x| x.name==t.parent_location}.first
track.unshift(t.name)
t = folders.select{|x| x.name==t.parent_location}.first
track.unshift(t.name)
t = folders.select{|x| x.name==act_location.parent_location}.first
track = ['ccc1']
trackt = ['ccc1']
tracktra['ccc1']
track
track.drop(0)
track
track.reverse.pop
track.reverse
track.reverse.last
track.reverse.last.pop
track.reverse
track.revers
track
track.pop(0)
t = folders.select{|x| x.name==act_location.parent_location}.first
track
track.unshift(t)
track.unshit(t)
t = folders.select{|x| x.name==act_location.parent_location}.first
track.unshift(act_location.name)
track = []
act_location
act_location.parent_location
act_location.parent_folder
act_location.name
act_location
pp folders
folders
c
n
act_location
c
n
c
files
c
(files.select{|a| a.name==command[1] && a.parent_location==act_location.name})
(files.select{|a| a.name==command[1]})
act_location
metadata = (files.select{|a| a.name==command[1]}).first unless files.select{|a| a.parent_location==act_location.name}.empty?
n
c
act_location
files
a.parent_location
files.select{|a| a.parent_location==act_location.name}.empty?
n
files.select{|a| a.name==command[1]}.empty?
command[1].nil?
c
ls
c
files.select{|a| a.name==command[1]}.empty?
command[1].nil?
c
folders.select{|a| a.name==command[1]}.empty?
n
files.select{|a| a.name==command[1]}.empty?
c
files
files = files.reject{|a| a.name==command[1]} unless files.select{|a| a.name==command[1]}.empty?
files.select{|a| a.name==command[1]}.empty?
files.reject{|a| a.name==command[1]}.empty?
files
n
files.reject{|a| a.name==command[1]}
files.select{|a| a.name==command[1]}
files
command[1]
command["f1"]
command
files.reject{|a| a.name==command[1]}.empty?
files.select{|a| a.parent_location==act_location.name}
files
c
files
files.reject{|a| a.name==command[1]}.empty?
files
n
files.reject{|a| a.name==command[1]}
files
c
files.select{|a| a.name=="a5"}.empty?
files
files.select{|a| a.name=="a1"}.empty?
files.reject{|a| a.name=="a1"}.empty?
files
files.reject{|a| a.name=="a1"}
files.select{|a| a.name=="a1"}.pop
files.select{|a| a.name=="a1"}
files
c
files
c
exit
metadata.metadata[:created_at]
metadata.metadata
metadata
n
c
exit
a.metadata
a=(files.select{|a| a.name==command[1]}).first
(files.select{|a| a.name==command[1]}).first
c
exit
a[:hola]
a
a={:hola => "que tal"}
metadata.metadata
n
c
exit
metadata.metadata
n
c
metadata.metadata
metadata.name+':'
n
(files.select{|a| a.name==command[1]}).first
c
whereami
c
act_location.name=='/' ? '' : act_location.name
act_location.name
c
act_location.parent_location+'/'+act_location.name
act_location.parent_location
c
act_location
act_location.parent_folder
c
n
act_location.parent_location==''
n
c
exit
folders
c
exit
folders.select{|a| a.name==act_location.parent_location}
act_location.parent_location
act_location
c
act_location
command[1]
c
child_folders.nil? || command[1].nil?
c
child_folders.nil?
c
n
child_folders.nil?
c
child_folders.select{|a| a.parent_location==act_location.name && a.name==command[1]}.empty?
child_folders
command[1]
c
n
act_location
child_folders.select{|a| a.parent_location==act_location.name && a.name==command[1]}.first
child_folders.select{|a| a.parent_location==act_location.name && a.name==command[1]}.fitst
child_folders.select{|a| a.parent_location==act_location.name && a.name==command[1]}
child_folders
c
exit
child_folders.select{|a| a.parent_location==act_location.name && a.name=='f1'}.empty?
child_folders.select{|a| a.parent_location==act_location.name && a.name=='f1'}
child_folders.select{|a| a.parent_location==act_location.name}
child_folders.select{|a| a.parent_location==act_location.name}.empty?
child_folders
c
child_folders
c
exit
Folder.find_by(name:'/')
folders
c
exit
act_path_fd.nil? && act_path_fl.nil?
act_path_fd.nil? || act_path_fl.nil?
act_path_fl
act_path_fd
c
act_path
c
files.select{|a| a.parent_location==act_location.name}.take
files.select{|a| a.parent_location==act_location.name}.pluck
files.select{|a| a.parent_location==act_location.name}
act_path
act_path = folders.select{|a| a.parent_location==act_location.name} unless folders.select{|a| a.parent_location==act_location.name}.empty?
act_path
act_pathact_path = folders.select{|a| a.parent_location==act_location.name} unless folders.select{|a| a.parent_location==act_location.name}.empty?
act_path
act_path.last.pop
act_path.last
act_path
act_path.last.pop
act_path.last
act_path
act_path.each{|a| puts a.name}
act_path
c
exit
pp act_path
act_path
act_path << files.select{|a| a.parent_location==act_location.name} unless files.select{|a| a.parent_location==act_location.name}.empty?
act_path
act_path << files.select{|a| a.parent_location==''} unless files.select{|a| a.parent_location==''}.empty?
act_path
act_path << files.select{|a| a.parent_location==''} unless files.select{|a| a.parent_location==''}.empty?
files.select{|a| a.parent_location==''}.empty?
files.select{|a| a.parent_location==''}.nil?
files.select{|a| a.parent_location==''}.empty?
act_path << files.select{|a| a.parent_location==''}
act_path
act_path << files.select{|a| a.parent_location=='/'}
      act_path = folders.select{|a| a.parent_location=='/'}
c
exit
act_path
act_path = folders.select{|a| a.parent_location=='/'}
folders
